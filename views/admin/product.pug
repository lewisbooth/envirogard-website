extends layoutAdmin

block body

  if product
    .lightbox#delete-item__lightbox
      .lightbox__window
        h4 Are you sure you want to delete this item?
        p This action is not reversible.
        p.bold= product.title
        .lightbox__window--buttons
          span(onclick='toggleDeleteConfirmation()') Cancel
          a.button.button__red.no-margin(href=`/dashboard/products/delete/${product._id}`) Delete

  .space-between
    div
      a(href='/dashboard/products') << Back to Products
    if product
      div
        a(href=product.pageURL target='_blank') View public page >>

  form.admin__form.edit-product(name='product' onsubmit='submitForm(event)')
    if product && product.title
      h1= product.title
    else
      h1 New Product
    label Images
      span.label__subtitle Drag and drop to re-arrange. The first image is used as a cover/meta image. (Max size: 20MB, Max images: 20)
    .edit-product__images
      if product && product.images
        for id, index in product.images
          div.edit-product__images--entry(
            data-key=index
            data-id=id
            draggable='true' 
            ondragstart='imageDragStart(event)' 
            ondragenter='dragEnter(event)' 
            ondragleave='dragLeave(event)' 
            ondragover='dragOver(event)' 
            ondrop='imageDrop(event)')
            img(src=product.imageURLs[index])
            div.edit-product__images--entry--delete(
              onclick=`deleteImage(event)`) ×
      .edit-product__images--new
        input(name='newImage' type='file' accept='image/*')
        .edit-product__images--new--text
          .edit-product__images--new--text--plus +
          span New Image

    .split-columns
      div
        .label-and-input
          label(for='title') Title
          input(name='title' type='text' value=(product ? product.title : '') required)
        .label-and-input
          label(for='subcategory') Subcategory
          select(name='subcategory')
            option(value='') None
            for category in globalCategories
              for subcategory in category.subcategories
                option(
                  value=subcategory._id
                  selected=(product ? product.subcategory == subcategory._id.toString() : false)
                )=subcategory.title
        .label-and-input
          label(for='shortDescription') Short Description
          textarea(name='shortDescription' rows='3' required)= product ? product.description.short : ''
        .label-and-input
          label(for='metaTitle') Meta Title
          span.link#copy-from-title Copy from Title
          input(name='metaTitle' type='text' value=(product ? product.meta.title : '') required)
        .label-and-input
          label(for='metaDescription') Meta Description
          span.link#copy-from-description Copy from Description
          textarea(name='metaDescription' required rows='3')= product ? product.meta.description : ''
        .label-and-input
          label(for='features') Features
          .multiple-input(data-multi='features')
            if product && product.features && product.features.length > 0
              for entry, i in product.features
                div(data-key=i)
                  input(type='text' onchange='updateFeature(event)' value=product.features[i])
                  .multiple-input__delete ×
            div(data-key='0')
              input(type='text' onchange='updateFeature(event)')
              .multiple-input__delete(onclick='deleteFeature(event)') × 
            .multiple-input__add(onclick='addFeature()') Add feature
        .label-and-input
          label(for='specifications') Specifications
          .multiple-input(data-multi='specifications')
            if product && product.specifications && Object.keys(product.specifications).length > 0
              for entry, i in product.specifications
                div(data-key=i)
                  input(
                    type='text' 
                    data-type='key'
                    value=entry[0] 
                    onchange='updateSpecification(event)')
                  input(
                    type='text' 
                    data-type='value'
                    value=entry[1] 
                    onchange='updateSpecification(event)')
                  .multiple-input__delete ×
            div(data-key='0')
              input(type='text' data-type='key')
              input(type='text' data-type='value')
              .multiple-input__delete ×            
            .multiple-input__add(onclick='addSpecification()') Add specification         
        .label-and-input
          label(for='youtubeID') Youtube Video ID
            span.label__subtitle Enter the Video ID only (e.g. www.youtube.com/watch?v=#[span.underline.bold XuGW1x3T0Fc])
          input(name='youtubeID' type='text' value=(product && product.youtubeID ? product.youtubeID : ''))
        .label-and-input
          label(for='manualPDF') Upload Manual PDF
          if product && product.manualPDF
            span.file-uploaded
              img(src='/images/icons/check-green-circle.svg')
              span File uploaded
              a(href=product.manualURL target='_blank') Download
          input(name='manualPDF' type='file' accept='.pdf')
          if product && product.manualPDF
            .checkbox
              input(name='deleteManual' type='checkbox')
              label(for='deleteManual') Delete Manual PDF
      
      div
        .label-and-input
          label(for='longDescription') Long Description
          //- Editor content is placed in a hidden textarea then extracted by JS
          //- because reading textarea.value decodes HTML entities
          //- i.e '&lt;div&gt;' becomes '<div>'
          textarea#pell-data(hidden)= product ? product.description.long : ''
          //- Decoded HTML is placed in the '#pell' editor element
          #pell
    .admin__upload-progress
      h5 Uploading files...
      progress(value='0' max='1')
    .admin__errors
    .admin__save-buttons
      if product
        button.button__green(type='submit') Save Changes
        .button.button__red(onclick='toggleDeleteConfirmation()') Delete product
      else
        button.button__green(type='submit') Add product
    
block extraHeaderScripts
  link(rel="stylesheet" type="text/css" href="https://unpkg.com/pell/dist/pell.min.css")

block extraFooterScripts
  script(src='https://unpkg.com/pell')
  script
    include ../../public/js/admin/edit-product.js
  script(src='https://unpkg.com/axios/dist/axios.min.js' async defer)